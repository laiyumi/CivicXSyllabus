generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

// define models
model User {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  email        String   @unique
  name         String?
  registeredAt DateTime @default(now())
  role         Role     @default(USER)
  posts        Post[]   @relation(fields: [postIDs], references: [id])
  postIDs      String[] @db.ObjectId
}

enum Role {
  USER
  ADMIN
}

model Post {
  id          String     @id @default(auto()) @map("_id") @db.ObjectId
  createdAt   DateTime   @default(now())
  title       String     @unique
  excerpt     String
  content     String
  link        String     @unique
  likes       Int        @default(0)
  saves       Int        @default(0)
  imageUrl    String
  published   Boolean    @default(false)
  source      Source     @relation(fields: [sourceId], references: [id])
  sourceId    String     @db.ObjectId
  categoryIDs String[]   @db.ObjectId
  categories  Category[] @relation(fields: [categoryIDs], references: [id])
  tagIDs      String[]   @db.ObjectId
  tags        Tag[]      @relation(fields: [tagIDs], references: [id])
  users       User[]     @relation(fields: [userIDs], references: [id])
  userIDs     String[]   @db.ObjectId
}

model Source {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  name      String   @unique
  posts     Post[]
  createdAt DateTime @default(now())
}

model Category {
  id      String   @id @default(auto()) @map("_id") @db.ObjectId
  name    String   @unique
  postIDs String[] @db.ObjectId
  posts   Post[]   @relation(fields: [postIDs], references: [id])
}

model Tag {
  id      String   @id @default(auto()) @map("_id") @db.ObjectId
  name    String   @unique
  postIDs String[] @db.ObjectId
  posts   Post[]   @relation(fields: [postIDs], references: [id])
}
